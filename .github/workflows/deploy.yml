name: Test, build, push, and deploy

on:
  push:
    paths-ignore:
      - README.md
      - docker-compose.yaml
      - '*.jenkinsfile'
      - Makefile
      - CODEOWNERS

env:
  image: ghcr.io/${{ github.repository }}/vera

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Generate version tags
      run: echo "version=$(./version.sh)" >> $GITHUB_ENV
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and publish Docker image
      run: |
        docker build --tag ${image}:${version} --tag ${image}:latest --tag ${image}:${version} .
        docker push ${image}:${version}
        docker push ${image}:latest

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Generate version tags
      run: |
        echo "tag=${image}:$(./version.sh)" >> $GITHUB_ENV
    - uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-gcp
        RESOURCE: nais/vera.yaml
        VARS: nais/dev.yaml
        VAR: image=${{ env.tag }}

  deploy-prod:
    needs:
      - deploy-dev
      - build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Generate version tags
      run: |
        echo "tag=${image}:$(./version.sh)" >> $GITHUB_ENV
    - uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: prod-gcp
        RESOURCE: nais/vera.yaml,vera-backup/vera-backup.yaml,nais/alert.yaml
        VARS: nais/prod.yaml
        VAR: image=${{ env.tag }}
