name: Test, build, push, and deploy

on: [push]

env:
  image: ghcr.io/${{ github.repository }}/vera

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-cache-
      - run: yarn install
      - run: yarn test

  build:
    name: Build and push Docker container
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Generate version tags
      run: echo "version=$(./version.sh)" >> $GITHUB_ENV
    - name: Build and publish Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GHCR_PUSH_TOKEN: ${{ secrets.GHCR_PUSH_TOKEN }}
        GHCR_PUSH_USERNAME: ${{ secrets.GHCR_PUSH_USERNAME }}
      run: |
        docker build --tag ${image}:${version} --tag ${image}:latest --tag ${image}:${version} .
        echo ${GHCR_PUSH_TOKEN} | docker login ghcr.io -u ${GHCR_PUSH_USERNAME} --password-stdin
        docker push ${image}:${version}
        docker push ${image}:latest

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Generate version tags
      run: |
        echo "tag=${image}:$(./version.sh)" >> $GITHUB_ENV
    - uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-gcp
        RESOURCE: nais/vera.yaml
        VARS: nais/dev.yaml
        VAR: image=${{ env.tag }}
